================================================================================
function declaration (optional argument)
================================================================================
fn parse(String) -> Array[Sexp]!SexpError
fn parse(string) -> Array[Sexp]!SexpError
fn parse(String?) -> Array[Sexp]!SexpError
fn parse(string?) -> Array[Sexp]!SexpError
fn parse(array[Sexp]?) -> Array[Sexp]!SexpError
fn parse(Array[Sexp]?) -> Array[Sexp]!SexpError
--------------------------------------------------------------------------------

(signature
  (signature_item
    (function_declaration
      (lowercase_identifier)
      (function_parameters
        (function_parameter
          (type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))
      (return_type
        (type_with_error
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))
              (type_arguments
                (type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))))))
          (type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))))
  (semicolon)
  (signature_item
    (function_declaration
      (lowercase_identifier)
      (function_parameters
        (function_parameter
          (lowercase_identifier)))
      (return_type
        (type_with_error
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))
              (type_arguments
                (type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))))))
          (type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))))
  (semicolon)
  (signature_item
    (function_declaration
      (lowercase_identifier)
      (function_parameters
        (function_parameter
          (type
            (option_type
              (type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier))))))))
      (return_type
        (type_with_error
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))
              (type_arguments
                (type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))))))
          (type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))))
  (semicolon)
  (signature_item
    (function_declaration
      (lowercase_identifier)
      (function_parameters
        (function_parameter
          (type
            (option_type
              (lowercase_identifier)))))
      (return_type
        (type_with_error
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))
              (type_arguments
                (type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))))))
          (type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))))
  (semicolon)
  (signature_item
    (function_declaration
      (lowercase_identifier)
      (function_parameters
        (function_parameter
          (type
            (option_type
              (type
                (apply_type
                  (qualified_type_identifier
                    (identifier
                      (lowercase_identifier)))
                  (type_arguments
                    (type
                      (qualified_type_identifier
                        (identifier
                          (uppercase_identifier)))))))))))
      (return_type
        (type_with_error
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))
              (type_arguments
                (type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))))))
          (type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))))
  (semicolon)
  (signature_item
    (function_declaration
      (lowercase_identifier)
      (function_parameters
        (function_parameter
          (type
            (option_type
              (type
                (apply_type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))
                  (type_arguments
                    (type
                      (qualified_type_identifier
                        (identifier
                          (uppercase_identifier)))))))))))
      (return_type
        (type_with_error
          (type
            (apply_type
              (qualified_type_identifier
                (identifier
                  (uppercase_identifier)))
              (type_arguments
                (type
                  (qualified_type_identifier
                    (identifier
                      (uppercase_identifier)))))))
          (type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))))))

================================================================================
function declaration (default value)
================================================================================
fn inspect(&ToJson, content? : Json, loc~ : SourceLoc = _, args_loc~ : ArgsLoc = _) -> Unit!InspectError

fn stringify(Json, escape_slash~ : Bool = .., indent~ : Int = ..) -> String
--------------------------------------------------------------------------------

(signature
  (signature_item
    (function_declaration
      (lowercase_identifier)
      (function_parameters
        (function_parameter
          (type
            (trait_object_type
              (type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))
        (function_parameter
          (function_optional_parameter
            (optional_parameter_label
              (lowercase_identifier))
            (type_annotation
              (type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))))
        (function_parameter
          (function_labeled_parameter
            (parameter_label
              (lowercase_identifier))
            (type_annotation
              (type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))
            (default_value)))
        (function_parameter
          (function_labeled_parameter
            (parameter_label
              (lowercase_identifier))
            (type_annotation
              (type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))
            (default_value))))
      (return_type
        (type_with_error
          (type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))
          (type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier))))))))
  (semicolon)
  (signature_item
    (function_declaration
      (lowercase_identifier)
      (function_parameters
        (function_parameter
          (type
            (qualified_type_identifier
              (identifier
                (uppercase_identifier)))))
        (function_parameter
          (function_labeled_parameter
            (parameter_label
              (lowercase_identifier))
            (type_annotation
              (type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))
            (default_value)))
        (function_parameter
          (function_labeled_parameter
            (parameter_label
              (lowercase_identifier))
            (type_annotation
              (type
                (qualified_type_identifier
                  (identifier
                    (uppercase_identifier)))))
            (default_value))))
      (return_type
        (type
          (qualified_type_identifier
            (identifier
              (uppercase_identifier))))))))
